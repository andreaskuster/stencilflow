{
  "inputs": {
    "a": {
      "data": "stencils/data/zeros_512x512x512_fp32.dat",
      "data_type": "float32"
    }
  },
  "outputs": [
    "b127"
  ],
  "dimensions": [
    512,
    512,
    512
  ],
  "program": {
    "b0": {
      "computation_string": "res = 0.16666666 * (a[i-1,j,k] + a[i+1,j,k] + a[i,j-1,k] + a[i,j+1,k] + a[i,j,k-1] + a[i,j,k+1])",
      "boundary_condition": {
        "a": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b1": {
      "computation_string": "res = 0.16666666 * (b0[i-1,j,k] + b0[i+1,j,k] + b0[i,j-1,k] + b0[i,j+1,k] + b0[i,j,k-1] + b0[i,j,k+1])",
      "boundary_condition": {
        "b0": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b2": {
      "computation_string": "res = 0.16666666 * (b1[i-1,j,k] + b1[i+1,j,k] + b1[i,j-1,k] + b1[i,j+1,k] + b1[i,j,k-1] + b1[i,j,k+1])",
      "boundary_condition": {
        "b1": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b3": {
      "computation_string": "res = 0.16666666 * (b2[i-1,j,k] + b2[i+1,j,k] + b2[i,j-1,k] + b2[i,j+1,k] + b2[i,j,k-1] + b2[i,j,k+1])",
      "boundary_condition": {
        "b2": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b4": {
      "computation_string": "res = 0.16666666 * (b3[i-1,j,k] + b3[i+1,j,k] + b3[i,j-1,k] + b3[i,j+1,k] + b3[i,j,k-1] + b3[i,j,k+1])",
      "boundary_condition": {
        "b3": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b5": {
      "computation_string": "res = 0.16666666 * (b4[i-1,j,k] + b4[i+1,j,k] + b4[i,j-1,k] + b4[i,j+1,k] + b4[i,j,k-1] + b4[i,j,k+1])",
      "boundary_condition": {
        "b4": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b6": {
      "computation_string": "res = 0.16666666 * (b5[i-1,j,k] + b5[i+1,j,k] + b5[i,j-1,k] + b5[i,j+1,k] + b5[i,j,k-1] + b5[i,j,k+1])",
      "boundary_condition": {
        "b5": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b7": {
      "computation_string": "res = 0.16666666 * (b6[i-1,j,k] + b6[i+1,j,k] + b6[i,j-1,k] + b6[i,j+1,k] + b6[i,j,k-1] + b6[i,j,k+1])",
      "boundary_condition": {
        "b6": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b8": {
      "computation_string": "res = 0.16666666 * (b7[i-1,j,k] + b7[i+1,j,k] + b7[i,j-1,k] + b7[i,j+1,k] + b7[i,j,k-1] + b7[i,j,k+1])",
      "boundary_condition": {
        "b7": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b9": {
      "computation_string": "res = 0.16666666 * (b8[i-1,j,k] + b8[i+1,j,k] + b8[i,j-1,k] + b8[i,j+1,k] + b8[i,j,k-1] + b8[i,j,k+1])",
      "boundary_condition": {
        "b8": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b10": {
      "computation_string": "res = 0.16666666 * (b9[i-1,j,k] + b9[i+1,j,k] + b9[i,j-1,k] + b9[i,j+1,k] + b9[i,j,k-1] + b9[i,j,k+1])",
      "boundary_condition": {
        "b9": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b11": {
      "computation_string": "res = 0.16666666 * (b10[i-1,j,k] + b10[i+1,j,k] + b10[i,j-1,k] + b10[i,j+1,k] + b10[i,j,k-1] + b10[i,j,k+1])",
      "boundary_condition": {
        "b10": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b12": {
      "computation_string": "res = 0.16666666 * (b11[i-1,j,k] + b11[i+1,j,k] + b11[i,j-1,k] + b11[i,j+1,k] + b11[i,j,k-1] + b11[i,j,k+1])",
      "boundary_condition": {
        "b11": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b13": {
      "computation_string": "res = 0.16666666 * (b12[i-1,j,k] + b12[i+1,j,k] + b12[i,j-1,k] + b12[i,j+1,k] + b12[i,j,k-1] + b12[i,j,k+1])",
      "boundary_condition": {
        "b12": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b14": {
      "computation_string": "res = 0.16666666 * (b13[i-1,j,k] + b13[i+1,j,k] + b13[i,j-1,k] + b13[i,j+1,k] + b13[i,j,k-1] + b13[i,j,k+1])",
      "boundary_condition": {
        "b13": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b15": {
      "computation_string": "res = 0.16666666 * (b14[i-1,j,k] + b14[i+1,j,k] + b14[i,j-1,k] + b14[i,j+1,k] + b14[i,j,k-1] + b14[i,j,k+1])",
      "boundary_condition": {
        "b14": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b16": {
      "computation_string": "res = 0.16666666 * (b15[i-1,j,k] + b15[i+1,j,k] + b15[i,j-1,k] + b15[i,j+1,k] + b15[i,j,k-1] + b15[i,j,k+1])",
      "boundary_condition": {
        "b15": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b17": {
      "computation_string": "res = 0.16666666 * (b16[i-1,j,k] + b16[i+1,j,k] + b16[i,j-1,k] + b16[i,j+1,k] + b16[i,j,k-1] + b16[i,j,k+1])",
      "boundary_condition": {
        "b16": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b18": {
      "computation_string": "res = 0.16666666 * (b17[i-1,j,k] + b17[i+1,j,k] + b17[i,j-1,k] + b17[i,j+1,k] + b17[i,j,k-1] + b17[i,j,k+1])",
      "boundary_condition": {
        "b17": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b19": {
      "computation_string": "res = 0.16666666 * (b18[i-1,j,k] + b18[i+1,j,k] + b18[i,j-1,k] + b18[i,j+1,k] + b18[i,j,k-1] + b18[i,j,k+1])",
      "boundary_condition": {
        "b18": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b20": {
      "computation_string": "res = 0.16666666 * (b19[i-1,j,k] + b19[i+1,j,k] + b19[i,j-1,k] + b19[i,j+1,k] + b19[i,j,k-1] + b19[i,j,k+1])",
      "boundary_condition": {
        "b19": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b21": {
      "computation_string": "res = 0.16666666 * (b20[i-1,j,k] + b20[i+1,j,k] + b20[i,j-1,k] + b20[i,j+1,k] + b20[i,j,k-1] + b20[i,j,k+1])",
      "boundary_condition": {
        "b20": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b22": {
      "computation_string": "res = 0.16666666 * (b21[i-1,j,k] + b21[i+1,j,k] + b21[i,j-1,k] + b21[i,j+1,k] + b21[i,j,k-1] + b21[i,j,k+1])",
      "boundary_condition": {
        "b21": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b23": {
      "computation_string": "res = 0.16666666 * (b22[i-1,j,k] + b22[i+1,j,k] + b22[i,j-1,k] + b22[i,j+1,k] + b22[i,j,k-1] + b22[i,j,k+1])",
      "boundary_condition": {
        "b22": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b24": {
      "computation_string": "res = 0.16666666 * (b23[i-1,j,k] + b23[i+1,j,k] + b23[i,j-1,k] + b23[i,j+1,k] + b23[i,j,k-1] + b23[i,j,k+1])",
      "boundary_condition": {
        "b23": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b25": {
      "computation_string": "res = 0.16666666 * (b24[i-1,j,k] + b24[i+1,j,k] + b24[i,j-1,k] + b24[i,j+1,k] + b24[i,j,k-1] + b24[i,j,k+1])",
      "boundary_condition": {
        "b24": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b26": {
      "computation_string": "res = 0.16666666 * (b25[i-1,j,k] + b25[i+1,j,k] + b25[i,j-1,k] + b25[i,j+1,k] + b25[i,j,k-1] + b25[i,j,k+1])",
      "boundary_condition": {
        "b25": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b27": {
      "computation_string": "res = 0.16666666 * (b26[i-1,j,k] + b26[i+1,j,k] + b26[i,j-1,k] + b26[i,j+1,k] + b26[i,j,k-1] + b26[i,j,k+1])",
      "boundary_condition": {
        "b26": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b28": {
      "computation_string": "res = 0.16666666 * (b27[i-1,j,k] + b27[i+1,j,k] + b27[i,j-1,k] + b27[i,j+1,k] + b27[i,j,k-1] + b27[i,j,k+1])",
      "boundary_condition": {
        "b27": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b29": {
      "computation_string": "res = 0.16666666 * (b28[i-1,j,k] + b28[i+1,j,k] + b28[i,j-1,k] + b28[i,j+1,k] + b28[i,j,k-1] + b28[i,j,k+1])",
      "boundary_condition": {
        "b28": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b30": {
      "computation_string": "res = 0.16666666 * (b29[i-1,j,k] + b29[i+1,j,k] + b29[i,j-1,k] + b29[i,j+1,k] + b29[i,j,k-1] + b29[i,j,k+1])",
      "boundary_condition": {
        "b29": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b31": {
      "computation_string": "res = 0.16666666 * (b30[i-1,j,k] + b30[i+1,j,k] + b30[i,j-1,k] + b30[i,j+1,k] + b30[i,j,k-1] + b30[i,j,k+1])",
      "boundary_condition": {
        "b30": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b32": {
      "computation_string": "res = 0.16666666 * (b31[i-1,j,k] + b31[i+1,j,k] + b31[i,j-1,k] + b31[i,j+1,k] + b31[i,j,k-1] + b31[i,j,k+1])",
      "boundary_condition": {
        "b31": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b33": {
      "computation_string": "res = 0.16666666 * (b32[i-1,j,k] + b32[i+1,j,k] + b32[i,j-1,k] + b32[i,j+1,k] + b32[i,j,k-1] + b32[i,j,k+1])",
      "boundary_condition": {
        "b32": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b34": {
      "computation_string": "res = 0.16666666 * (b33[i-1,j,k] + b33[i+1,j,k] + b33[i,j-1,k] + b33[i,j+1,k] + b33[i,j,k-1] + b33[i,j,k+1])",
      "boundary_condition": {
        "b33": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b35": {
      "computation_string": "res = 0.16666666 * (b34[i-1,j,k] + b34[i+1,j,k] + b34[i,j-1,k] + b34[i,j+1,k] + b34[i,j,k-1] + b34[i,j,k+1])",
      "boundary_condition": {
        "b34": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b36": {
      "computation_string": "res = 0.16666666 * (b35[i-1,j,k] + b35[i+1,j,k] + b35[i,j-1,k] + b35[i,j+1,k] + b35[i,j,k-1] + b35[i,j,k+1])",
      "boundary_condition": {
        "b35": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b37": {
      "computation_string": "res = 0.16666666 * (b36[i-1,j,k] + b36[i+1,j,k] + b36[i,j-1,k] + b36[i,j+1,k] + b36[i,j,k-1] + b36[i,j,k+1])",
      "boundary_condition": {
        "b36": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b38": {
      "computation_string": "res = 0.16666666 * (b37[i-1,j,k] + b37[i+1,j,k] + b37[i,j-1,k] + b37[i,j+1,k] + b37[i,j,k-1] + b37[i,j,k+1])",
      "boundary_condition": {
        "b37": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b39": {
      "computation_string": "res = 0.16666666 * (b38[i-1,j,k] + b38[i+1,j,k] + b38[i,j-1,k] + b38[i,j+1,k] + b38[i,j,k-1] + b38[i,j,k+1])",
      "boundary_condition": {
        "b38": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b40": {
      "computation_string": "res = 0.16666666 * (b39[i-1,j,k] + b39[i+1,j,k] + b39[i,j-1,k] + b39[i,j+1,k] + b39[i,j,k-1] + b39[i,j,k+1])",
      "boundary_condition": {
        "b39": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b41": {
      "computation_string": "res = 0.16666666 * (b40[i-1,j,k] + b40[i+1,j,k] + b40[i,j-1,k] + b40[i,j+1,k] + b40[i,j,k-1] + b40[i,j,k+1])",
      "boundary_condition": {
        "b40": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b42": {
      "computation_string": "res = 0.16666666 * (b41[i-1,j,k] + b41[i+1,j,k] + b41[i,j-1,k] + b41[i,j+1,k] + b41[i,j,k-1] + b41[i,j,k+1])",
      "boundary_condition": {
        "b41": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b43": {
      "computation_string": "res = 0.16666666 * (b42[i-1,j,k] + b42[i+1,j,k] + b42[i,j-1,k] + b42[i,j+1,k] + b42[i,j,k-1] + b42[i,j,k+1])",
      "boundary_condition": {
        "b42": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b44": {
      "computation_string": "res = 0.16666666 * (b43[i-1,j,k] + b43[i+1,j,k] + b43[i,j-1,k] + b43[i,j+1,k] + b43[i,j,k-1] + b43[i,j,k+1])",
      "boundary_condition": {
        "b43": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b45": {
      "computation_string": "res = 0.16666666 * (b44[i-1,j,k] + b44[i+1,j,k] + b44[i,j-1,k] + b44[i,j+1,k] + b44[i,j,k-1] + b44[i,j,k+1])",
      "boundary_condition": {
        "b44": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b46": {
      "computation_string": "res = 0.16666666 * (b45[i-1,j,k] + b45[i+1,j,k] + b45[i,j-1,k] + b45[i,j+1,k] + b45[i,j,k-1] + b45[i,j,k+1])",
      "boundary_condition": {
        "b45": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b47": {
      "computation_string": "res = 0.16666666 * (b46[i-1,j,k] + b46[i+1,j,k] + b46[i,j-1,k] + b46[i,j+1,k] + b46[i,j,k-1] + b46[i,j,k+1])",
      "boundary_condition": {
        "b46": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b48": {
      "computation_string": "res = 0.16666666 * (b47[i-1,j,k] + b47[i+1,j,k] + b47[i,j-1,k] + b47[i,j+1,k] + b47[i,j,k-1] + b47[i,j,k+1])",
      "boundary_condition": {
        "b47": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b49": {
      "computation_string": "res = 0.16666666 * (b48[i-1,j,k] + b48[i+1,j,k] + b48[i,j-1,k] + b48[i,j+1,k] + b48[i,j,k-1] + b48[i,j,k+1])",
      "boundary_condition": {
        "b48": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b50": {
      "computation_string": "res = 0.16666666 * (b49[i-1,j,k] + b49[i+1,j,k] + b49[i,j-1,k] + b49[i,j+1,k] + b49[i,j,k-1] + b49[i,j,k+1])",
      "boundary_condition": {
        "b49": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b51": {
      "computation_string": "res = 0.16666666 * (b50[i-1,j,k] + b50[i+1,j,k] + b50[i,j-1,k] + b50[i,j+1,k] + b50[i,j,k-1] + b50[i,j,k+1])",
      "boundary_condition": {
        "b50": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b52": {
      "computation_string": "res = 0.16666666 * (b51[i-1,j,k] + b51[i+1,j,k] + b51[i,j-1,k] + b51[i,j+1,k] + b51[i,j,k-1] + b51[i,j,k+1])",
      "boundary_condition": {
        "b51": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b53": {
      "computation_string": "res = 0.16666666 * (b52[i-1,j,k] + b52[i+1,j,k] + b52[i,j-1,k] + b52[i,j+1,k] + b52[i,j,k-1] + b52[i,j,k+1])",
      "boundary_condition": {
        "b52": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b54": {
      "computation_string": "res = 0.16666666 * (b53[i-1,j,k] + b53[i+1,j,k] + b53[i,j-1,k] + b53[i,j+1,k] + b53[i,j,k-1] + b53[i,j,k+1])",
      "boundary_condition": {
        "b53": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b55": {
      "computation_string": "res = 0.16666666 * (b54[i-1,j,k] + b54[i+1,j,k] + b54[i,j-1,k] + b54[i,j+1,k] + b54[i,j,k-1] + b54[i,j,k+1])",
      "boundary_condition": {
        "b54": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b56": {
      "computation_string": "res = 0.16666666 * (b55[i-1,j,k] + b55[i+1,j,k] + b55[i,j-1,k] + b55[i,j+1,k] + b55[i,j,k-1] + b55[i,j,k+1])",
      "boundary_condition": {
        "b55": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b57": {
      "computation_string": "res = 0.16666666 * (b56[i-1,j,k] + b56[i+1,j,k] + b56[i,j-1,k] + b56[i,j+1,k] + b56[i,j,k-1] + b56[i,j,k+1])",
      "boundary_condition": {
        "b56": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b58": {
      "computation_string": "res = 0.16666666 * (b57[i-1,j,k] + b57[i+1,j,k] + b57[i,j-1,k] + b57[i,j+1,k] + b57[i,j,k-1] + b57[i,j,k+1])",
      "boundary_condition": {
        "b57": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b59": {
      "computation_string": "res = 0.16666666 * (b58[i-1,j,k] + b58[i+1,j,k] + b58[i,j-1,k] + b58[i,j+1,k] + b58[i,j,k-1] + b58[i,j,k+1])",
      "boundary_condition": {
        "b58": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b60": {
      "computation_string": "res = 0.16666666 * (b59[i-1,j,k] + b59[i+1,j,k] + b59[i,j-1,k] + b59[i,j+1,k] + b59[i,j,k-1] + b59[i,j,k+1])",
      "boundary_condition": {
        "b59": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b61": {
      "computation_string": "res = 0.16666666 * (b60[i-1,j,k] + b60[i+1,j,k] + b60[i,j-1,k] + b60[i,j+1,k] + b60[i,j,k-1] + b60[i,j,k+1])",
      "boundary_condition": {
        "b60": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b62": {
      "computation_string": "res = 0.16666666 * (b61[i-1,j,k] + b61[i+1,j,k] + b61[i,j-1,k] + b61[i,j+1,k] + b61[i,j,k-1] + b61[i,j,k+1])",
      "boundary_condition": {
        "b61": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b63": {
      "computation_string": "res = 0.16666666 * (b62[i-1,j,k] + b62[i+1,j,k] + b62[i,j-1,k] + b62[i,j+1,k] + b62[i,j,k-1] + b62[i,j,k+1])",
      "boundary_condition": {
        "b62": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b64": {
      "computation_string": "res = 0.16666666 * (b63[i-1,j,k] + b63[i+1,j,k] + b63[i,j-1,k] + b63[i,j+1,k] + b63[i,j,k-1] + b63[i,j,k+1])",
      "boundary_condition": {
        "b63": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b65": {
      "computation_string": "res = 0.16666666 * (b64[i-1,j,k] + b64[i+1,j,k] + b64[i,j-1,k] + b64[i,j+1,k] + b64[i,j,k-1] + b64[i,j,k+1])",
      "boundary_condition": {
        "b64": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b66": {
      "computation_string": "res = 0.16666666 * (b65[i-1,j,k] + b65[i+1,j,k] + b65[i,j-1,k] + b65[i,j+1,k] + b65[i,j,k-1] + b65[i,j,k+1])",
      "boundary_condition": {
        "b65": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b67": {
      "computation_string": "res = 0.16666666 * (b66[i-1,j,k] + b66[i+1,j,k] + b66[i,j-1,k] + b66[i,j+1,k] + b66[i,j,k-1] + b66[i,j,k+1])",
      "boundary_condition": {
        "b66": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b68": {
      "computation_string": "res = 0.16666666 * (b67[i-1,j,k] + b67[i+1,j,k] + b67[i,j-1,k] + b67[i,j+1,k] + b67[i,j,k-1] + b67[i,j,k+1])",
      "boundary_condition": {
        "b67": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b69": {
      "computation_string": "res = 0.16666666 * (b68[i-1,j,k] + b68[i+1,j,k] + b68[i,j-1,k] + b68[i,j+1,k] + b68[i,j,k-1] + b68[i,j,k+1])",
      "boundary_condition": {
        "b68": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b70": {
      "computation_string": "res = 0.16666666 * (b69[i-1,j,k] + b69[i+1,j,k] + b69[i,j-1,k] + b69[i,j+1,k] + b69[i,j,k-1] + b69[i,j,k+1])",
      "boundary_condition": {
        "b69": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b71": {
      "computation_string": "res = 0.16666666 * (b70[i-1,j,k] + b70[i+1,j,k] + b70[i,j-1,k] + b70[i,j+1,k] + b70[i,j,k-1] + b70[i,j,k+1])",
      "boundary_condition": {
        "b70": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b72": {
      "computation_string": "res = 0.16666666 * (b71[i-1,j,k] + b71[i+1,j,k] + b71[i,j-1,k] + b71[i,j+1,k] + b71[i,j,k-1] + b71[i,j,k+1])",
      "boundary_condition": {
        "b71": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b73": {
      "computation_string": "res = 0.16666666 * (b72[i-1,j,k] + b72[i+1,j,k] + b72[i,j-1,k] + b72[i,j+1,k] + b72[i,j,k-1] + b72[i,j,k+1])",
      "boundary_condition": {
        "b72": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b74": {
      "computation_string": "res = 0.16666666 * (b73[i-1,j,k] + b73[i+1,j,k] + b73[i,j-1,k] + b73[i,j+1,k] + b73[i,j,k-1] + b73[i,j,k+1])",
      "boundary_condition": {
        "b73": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b75": {
      "computation_string": "res = 0.16666666 * (b74[i-1,j,k] + b74[i+1,j,k] + b74[i,j-1,k] + b74[i,j+1,k] + b74[i,j,k-1] + b74[i,j,k+1])",
      "boundary_condition": {
        "b74": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b76": {
      "computation_string": "res = 0.16666666 * (b75[i-1,j,k] + b75[i+1,j,k] + b75[i,j-1,k] + b75[i,j+1,k] + b75[i,j,k-1] + b75[i,j,k+1])",
      "boundary_condition": {
        "b75": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b77": {
      "computation_string": "res = 0.16666666 * (b76[i-1,j,k] + b76[i+1,j,k] + b76[i,j-1,k] + b76[i,j+1,k] + b76[i,j,k-1] + b76[i,j,k+1])",
      "boundary_condition": {
        "b76": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b78": {
      "computation_string": "res = 0.16666666 * (b77[i-1,j,k] + b77[i+1,j,k] + b77[i,j-1,k] + b77[i,j+1,k] + b77[i,j,k-1] + b77[i,j,k+1])",
      "boundary_condition": {
        "b77": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b79": {
      "computation_string": "res = 0.16666666 * (b78[i-1,j,k] + b78[i+1,j,k] + b78[i,j-1,k] + b78[i,j+1,k] + b78[i,j,k-1] + b78[i,j,k+1])",
      "boundary_condition": {
        "b78": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b80": {
      "computation_string": "res = 0.16666666 * (b79[i-1,j,k] + b79[i+1,j,k] + b79[i,j-1,k] + b79[i,j+1,k] + b79[i,j,k-1] + b79[i,j,k+1])",
      "boundary_condition": {
        "b79": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b81": {
      "computation_string": "res = 0.16666666 * (b80[i-1,j,k] + b80[i+1,j,k] + b80[i,j-1,k] + b80[i,j+1,k] + b80[i,j,k-1] + b80[i,j,k+1])",
      "boundary_condition": {
        "b80": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b82": {
      "computation_string": "res = 0.16666666 * (b81[i-1,j,k] + b81[i+1,j,k] + b81[i,j-1,k] + b81[i,j+1,k] + b81[i,j,k-1] + b81[i,j,k+1])",
      "boundary_condition": {
        "b81": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b83": {
      "computation_string": "res = 0.16666666 * (b82[i-1,j,k] + b82[i+1,j,k] + b82[i,j-1,k] + b82[i,j+1,k] + b82[i,j,k-1] + b82[i,j,k+1])",
      "boundary_condition": {
        "b82": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b84": {
      "computation_string": "res = 0.16666666 * (b83[i-1,j,k] + b83[i+1,j,k] + b83[i,j-1,k] + b83[i,j+1,k] + b83[i,j,k-1] + b83[i,j,k+1])",
      "boundary_condition": {
        "b83": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b85": {
      "computation_string": "res = 0.16666666 * (b84[i-1,j,k] + b84[i+1,j,k] + b84[i,j-1,k] + b84[i,j+1,k] + b84[i,j,k-1] + b84[i,j,k+1])",
      "boundary_condition": {
        "b84": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b86": {
      "computation_string": "res = 0.16666666 * (b85[i-1,j,k] + b85[i+1,j,k] + b85[i,j-1,k] + b85[i,j+1,k] + b85[i,j,k-1] + b85[i,j,k+1])",
      "boundary_condition": {
        "b85": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b87": {
      "computation_string": "res = 0.16666666 * (b86[i-1,j,k] + b86[i+1,j,k] + b86[i,j-1,k] + b86[i,j+1,k] + b86[i,j,k-1] + b86[i,j,k+1])",
      "boundary_condition": {
        "b86": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b88": {
      "computation_string": "res = 0.16666666 * (b87[i-1,j,k] + b87[i+1,j,k] + b87[i,j-1,k] + b87[i,j+1,k] + b87[i,j,k-1] + b87[i,j,k+1])",
      "boundary_condition": {
        "b87": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b89": {
      "computation_string": "res = 0.16666666 * (b88[i-1,j,k] + b88[i+1,j,k] + b88[i,j-1,k] + b88[i,j+1,k] + b88[i,j,k-1] + b88[i,j,k+1])",
      "boundary_condition": {
        "b88": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b90": {
      "computation_string": "res = 0.16666666 * (b89[i-1,j,k] + b89[i+1,j,k] + b89[i,j-1,k] + b89[i,j+1,k] + b89[i,j,k-1] + b89[i,j,k+1])",
      "boundary_condition": {
        "b89": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b91": {
      "computation_string": "res = 0.16666666 * (b90[i-1,j,k] + b90[i+1,j,k] + b90[i,j-1,k] + b90[i,j+1,k] + b90[i,j,k-1] + b90[i,j,k+1])",
      "boundary_condition": {
        "b90": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b92": {
      "computation_string": "res = 0.16666666 * (b91[i-1,j,k] + b91[i+1,j,k] + b91[i,j-1,k] + b91[i,j+1,k] + b91[i,j,k-1] + b91[i,j,k+1])",
      "boundary_condition": {
        "b91": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b93": {
      "computation_string": "res = 0.16666666 * (b92[i-1,j,k] + b92[i+1,j,k] + b92[i,j-1,k] + b92[i,j+1,k] + b92[i,j,k-1] + b92[i,j,k+1])",
      "boundary_condition": {
        "b92": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b94": {
      "computation_string": "res = 0.16666666 * (b93[i-1,j,k] + b93[i+1,j,k] + b93[i,j-1,k] + b93[i,j+1,k] + b93[i,j,k-1] + b93[i,j,k+1])",
      "boundary_condition": {
        "b93": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b95": {
      "computation_string": "res = 0.16666666 * (b94[i-1,j,k] + b94[i+1,j,k] + b94[i,j-1,k] + b94[i,j+1,k] + b94[i,j,k-1] + b94[i,j,k+1])",
      "boundary_condition": {
        "b94": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b96": {
      "computation_string": "res = 0.16666666 * (b95[i-1,j,k] + b95[i+1,j,k] + b95[i,j-1,k] + b95[i,j+1,k] + b95[i,j,k-1] + b95[i,j,k+1])",
      "boundary_condition": {
        "b95": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b97": {
      "computation_string": "res = 0.16666666 * (b96[i-1,j,k] + b96[i+1,j,k] + b96[i,j-1,k] + b96[i,j+1,k] + b96[i,j,k-1] + b96[i,j,k+1])",
      "boundary_condition": {
        "b96": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b98": {
      "computation_string": "res = 0.16666666 * (b97[i-1,j,k] + b97[i+1,j,k] + b97[i,j-1,k] + b97[i,j+1,k] + b97[i,j,k-1] + b97[i,j,k+1])",
      "boundary_condition": {
        "b97": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b99": {
      "computation_string": "res = 0.16666666 * (b98[i-1,j,k] + b98[i+1,j,k] + b98[i,j-1,k] + b98[i,j+1,k] + b98[i,j,k-1] + b98[i,j,k+1])",
      "boundary_condition": {
        "b98": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b100": {
      "computation_string": "res = 0.16666666 * (b99[i-1,j,k] + b99[i+1,j,k] + b99[i,j-1,k] + b99[i,j+1,k] + b99[i,j,k-1] + b99[i,j,k+1])",
      "boundary_condition": {
        "b99": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b101": {
      "computation_string": "res = 0.16666666 * (b100[i-1,j,k] + b100[i+1,j,k] + b100[i,j-1,k] + b100[i,j+1,k] + b100[i,j,k-1] + b100[i,j,k+1])",
      "boundary_condition": {
        "b100": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b102": {
      "computation_string": "res = 0.16666666 * (b101[i-1,j,k] + b101[i+1,j,k] + b101[i,j-1,k] + b101[i,j+1,k] + b101[i,j,k-1] + b101[i,j,k+1])",
      "boundary_condition": {
        "b101": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b103": {
      "computation_string": "res = 0.16666666 * (b102[i-1,j,k] + b102[i+1,j,k] + b102[i,j-1,k] + b102[i,j+1,k] + b102[i,j,k-1] + b102[i,j,k+1])",
      "boundary_condition": {
        "b102": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b104": {
      "computation_string": "res = 0.16666666 * (b103[i-1,j,k] + b103[i+1,j,k] + b103[i,j-1,k] + b103[i,j+1,k] + b103[i,j,k-1] + b103[i,j,k+1])",
      "boundary_condition": {
        "b103": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b105": {
      "computation_string": "res = 0.16666666 * (b104[i-1,j,k] + b104[i+1,j,k] + b104[i,j-1,k] + b104[i,j+1,k] + b104[i,j,k-1] + b104[i,j,k+1])",
      "boundary_condition": {
        "b104": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b106": {
      "computation_string": "res = 0.16666666 * (b105[i-1,j,k] + b105[i+1,j,k] + b105[i,j-1,k] + b105[i,j+1,k] + b105[i,j,k-1] + b105[i,j,k+1])",
      "boundary_condition": {
        "b105": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b107": {
      "computation_string": "res = 0.16666666 * (b106[i-1,j,k] + b106[i+1,j,k] + b106[i,j-1,k] + b106[i,j+1,k] + b106[i,j,k-1] + b106[i,j,k+1])",
      "boundary_condition": {
        "b106": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b108": {
      "computation_string": "res = 0.16666666 * (b107[i-1,j,k] + b107[i+1,j,k] + b107[i,j-1,k] + b107[i,j+1,k] + b107[i,j,k-1] + b107[i,j,k+1])",
      "boundary_condition": {
        "b107": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b109": {
      "computation_string": "res = 0.16666666 * (b108[i-1,j,k] + b108[i+1,j,k] + b108[i,j-1,k] + b108[i,j+1,k] + b108[i,j,k-1] + b108[i,j,k+1])",
      "boundary_condition": {
        "b108": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b110": {
      "computation_string": "res = 0.16666666 * (b109[i-1,j,k] + b109[i+1,j,k] + b109[i,j-1,k] + b109[i,j+1,k] + b109[i,j,k-1] + b109[i,j,k+1])",
      "boundary_condition": {
        "b109": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b111": {
      "computation_string": "res = 0.16666666 * (b110[i-1,j,k] + b110[i+1,j,k] + b110[i,j-1,k] + b110[i,j+1,k] + b110[i,j,k-1] + b110[i,j,k+1])",
      "boundary_condition": {
        "b110": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b112": {
      "computation_string": "res = 0.16666666 * (b111[i-1,j,k] + b111[i+1,j,k] + b111[i,j-1,k] + b111[i,j+1,k] + b111[i,j,k-1] + b111[i,j,k+1])",
      "boundary_condition": {
        "b111": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b113": {
      "computation_string": "res = 0.16666666 * (b112[i-1,j,k] + b112[i+1,j,k] + b112[i,j-1,k] + b112[i,j+1,k] + b112[i,j,k-1] + b112[i,j,k+1])",
      "boundary_condition": {
        "b112": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b114": {
      "computation_string": "res = 0.16666666 * (b113[i-1,j,k] + b113[i+1,j,k] + b113[i,j-1,k] + b113[i,j+1,k] + b113[i,j,k-1] + b113[i,j,k+1])",
      "boundary_condition": {
        "b113": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b115": {
      "computation_string": "res = 0.16666666 * (b114[i-1,j,k] + b114[i+1,j,k] + b114[i,j-1,k] + b114[i,j+1,k] + b114[i,j,k-1] + b114[i,j,k+1])",
      "boundary_condition": {
        "b114": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b116": {
      "computation_string": "res = 0.16666666 * (b115[i-1,j,k] + b115[i+1,j,k] + b115[i,j-1,k] + b115[i,j+1,k] + b115[i,j,k-1] + b115[i,j,k+1])",
      "boundary_condition": {
        "b115": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b117": {
      "computation_string": "res = 0.16666666 * (b116[i-1,j,k] + b116[i+1,j,k] + b116[i,j-1,k] + b116[i,j+1,k] + b116[i,j,k-1] + b116[i,j,k+1])",
      "boundary_condition": {
        "b116": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b118": {
      "computation_string": "res = 0.16666666 * (b117[i-1,j,k] + b117[i+1,j,k] + b117[i,j-1,k] + b117[i,j+1,k] + b117[i,j,k-1] + b117[i,j,k+1])",
      "boundary_condition": {
        "b117": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b119": {
      "computation_string": "res = 0.16666666 * (b118[i-1,j,k] + b118[i+1,j,k] + b118[i,j-1,k] + b118[i,j+1,k] + b118[i,j,k-1] + b118[i,j,k+1])",
      "boundary_condition": {
        "b118": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b120": {
      "computation_string": "res = 0.16666666 * (b119[i-1,j,k] + b119[i+1,j,k] + b119[i,j-1,k] + b119[i,j+1,k] + b119[i,j,k-1] + b119[i,j,k+1])",
      "boundary_condition": {
        "b119": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b121": {
      "computation_string": "res = 0.16666666 * (b120[i-1,j,k] + b120[i+1,j,k] + b120[i,j-1,k] + b120[i,j+1,k] + b120[i,j,k-1] + b120[i,j,k+1])",
      "boundary_condition": {
        "b120": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b122": {
      "computation_string": "res = 0.16666666 * (b121[i-1,j,k] + b121[i+1,j,k] + b121[i,j-1,k] + b121[i,j+1,k] + b121[i,j,k-1] + b121[i,j,k+1])",
      "boundary_condition": {
        "b121": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b123": {
      "computation_string": "res = 0.16666666 * (b122[i-1,j,k] + b122[i+1,j,k] + b122[i,j-1,k] + b122[i,j+1,k] + b122[i,j,k-1] + b122[i,j,k+1])",
      "boundary_condition": {
        "b122": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b124": {
      "computation_string": "res = 0.16666666 * (b123[i-1,j,k] + b123[i+1,j,k] + b123[i,j-1,k] + b123[i,j+1,k] + b123[i,j,k-1] + b123[i,j,k+1])",
      "boundary_condition": {
        "b123": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b125": {
      "computation_string": "res = 0.16666666 * (b124[i-1,j,k] + b124[i+1,j,k] + b124[i,j-1,k] + b124[i,j+1,k] + b124[i,j,k-1] + b124[i,j,k+1])",
      "boundary_condition": {
        "b124": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b126": {
      "computation_string": "res = 0.16666666 * (b125[i-1,j,k] + b125[i+1,j,k] + b125[i,j-1,k] + b125[i,j+1,k] + b125[i,j,k-1] + b125[i,j,k+1])",
      "boundary_condition": {
        "b125": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    },
    "b127": {
      "computation_string": "res = 0.16666666 * (b126[i-1,j,k] + b126[i+1,j,k] + b126[i,j-1,k] + b126[i,j+1,k] + b126[i,j,k-1] + b126[i,j,k+1])",
      "boundary_condition": {
        "b126": {
          "type": "constant",
          "value": 1.0
        }
      },
      "data_type": "float32"
    }
  }
}
