{"inputs": {"inA": {"data": "stencils/data/ones_16x1024x1024_fp64.dat", "data_type": "float64"}, "inB": {"data": "stencils/data/ones_16x1024x1024_fp64.dat", "data_type": "float64"}, "inC": {"data": "stencils/data/ones_16x1024x1024_fp64.dat", "data_type": "float64"}, "inD": {"data": "stencils/data/ones_16x1024x1024_fp64.dat", "data_type": "float64"}}, "dimensions": [16, 1024, 1024], "outputs": ["out"], "program": {"k0": {"boundary_conditions": {"inA": {"type": "constant", "value": 1.0}, "inB": {"type": "constant", "value": 1.0}, "inC": {"type": "constant", "value": 1.0}, "inD": {"type": "constant", "value": 1.0}}, "data_type": "float64", "computation_string": "res = 0.0625 *  (inA[i, j, k +0] + inA[i, j, k +1] + inA[i, j, k +2] + inA[i, j, k +3] + inA[i, j, k +4] + inA[i, j, k +5] + inA[i, j, k +6] + inA[i, j, k +7] + inA[i, j, k +8] + inA[i, j, k +9] + inA[i, j, k +10] + inA[i, j, k +11] + inA[i, j, k +12] + inA[i, j, k +13] + inA[i, j, k +14] + inA[i, j, k +15] + inB[i, j, k +0] + inB[i, j, k +1] + inB[i, j, k +2] + inB[i, j, k +3] + inB[i, j, k +4] + inB[i, j, k +5] + inB[i, j, k +6] + inB[i, j, k +7] + inB[i, j, k +8] + inB[i, j, k +9] + inB[i, j, k +10] + inB[i, j, k +11] + inB[i, j, k +12] + inB[i, j, k +13] + inB[i, j, k +14] + inB[i, j, k +15] + inC[i, j, k +0] + inC[i, j, k +1] + inC[i, j, k +2] + inC[i, j, k +3] + inC[i, j, k +4] + inC[i, j, k +5] + inC[i, j, k +6] + inC[i, j, k +7] + inC[i, j, k +8] + inC[i, j, k +9] + inC[i, j, k +10] + inC[i, j, k +11] + inC[i, j, k +12] + inC[i, j, k +13] + inC[i, j, k +14] + inC[i, j, k +15] + inD[i, j, k +0] + inD[i, j, k +1] + inD[i, j, k +2] + inD[i, j, k +3] + inD[i, j, k +4] + inD[i, j, k +5] + inD[i, j, k +6] + inD[i, j, k +7] + inD[i, j, k +8] + inD[i, j, k +9] + inD[i, j, k +10] + inD[i, j, k +11] + inD[i, j, k +12] + inD[i, j, k +13] + inD[i, j, k +14] + inD[i, j, k +15] )"}, "k1": {"boundary_conditions": {"inA": {"type": "constant", "value": 1.0}, "inB": {"type": "constant", "value": 1.0}, "inC": {"type": "constant", "value": 1.0}, "inD": {"type": "constant", "value": 1.0}}, "data_type": "float64", "computation_string": "res = 0.0625 *  (inA[i, j, k +0] + inA[i, j, k +1] + inA[i, j, k +2] + inA[i, j, k +3] + inA[i, j, k +4] + inA[i, j, k +5] + inA[i, j, k +6] + inA[i, j, k +7] + inA[i, j, k +8] + inA[i, j, k +9] + inA[i, j, k +10] + inA[i, j, k +11] + inA[i, j, k +12] + inA[i, j, k +13] + inA[i, j, k +14] + inA[i, j, k +15] + inB[i, j, k +0] + inB[i, j, k +1] + inB[i, j, k +2] + inB[i, j, k +3] + inB[i, j, k +4] + inB[i, j, k +5] + inB[i, j, k +6] + inB[i, j, k +7] + inB[i, j, k +8] + inB[i, j, k +9] + inB[i, j, k +10] + inB[i, j, k +11] + inB[i, j, k +12] + inB[i, j, k +13] + inB[i, j, k +14] + inB[i, j, k +15] + inC[i, j, k +0] + inC[i, j, k +1] + inC[i, j, k +2] + inC[i, j, k +3] + inC[i, j, k +4] + inC[i, j, k +5] + inC[i, j, k +6] + inC[i, j, k +7] + inC[i, j, k +8] + inC[i, j, k +9] + inC[i, j, k +10] + inC[i, j, k +11] + inC[i, j, k +12] + inC[i, j, k +13] + inC[i, j, k +14] + inC[i, j, k +15] + inD[i, j, k +0] + inD[i, j, k +1] + inD[i, j, k +2] + inD[i, j, k +3] + inD[i, j, k +4] + inD[i, j, k +5] + inD[i, j, k +6] + inD[i, j, k +7] + inD[i, j, k +8] + inD[i, j, k +9] + inD[i, j, k +10] + inD[i, j, k +11] + inD[i, j, k +12] + inD[i, j, k +13] + inD[i, j, k +14] + inD[i, j, k +15] )"}, "k2": {"boundary_conditions": {"inA": {"type": "constant", "value": 1.0}, "inB": {"type": "constant", "value": 1.0}, "inC": {"type": "constant", "value": 1.0}, "inD": {"type": "constant", "value": 1.0}}, "data_type": "float64", "computation_string": "res = 0.0625 *  (inA[i, j, k +0] + inA[i, j, k +1] + inA[i, j, k +2] + inA[i, j, k +3] + inA[i, j, k +4] + inA[i, j, k +5] + inA[i, j, k +6] + inA[i, j, k +7] + inA[i, j, k +8] + inA[i, j, k +9] + inA[i, j, k +10] + inA[i, j, k +11] + inA[i, j, k +12] + inA[i, j, k +13] + inA[i, j, k +14] + inA[i, j, k +15] + inB[i, j, k +0] + inB[i, j, k +1] + inB[i, j, k +2] + inB[i, j, k +3] + inB[i, j, k +4] + inB[i, j, k +5] + inB[i, j, k +6] + inB[i, j, k +7] + inB[i, j, k +8] + inB[i, j, k +9] + inB[i, j, k +10] + inB[i, j, k +11] + inB[i, j, k +12] + inB[i, j, k +13] + inB[i, j, k +14] + inB[i, j, k +15] + inC[i, j, k +0] + inC[i, j, k +1] + inC[i, j, k +2] + inC[i, j, k +3] + inC[i, j, k +4] + inC[i, j, k +5] + inC[i, j, k +6] + inC[i, j, k +7] + inC[i, j, k +8] + inC[i, j, k +9] + inC[i, j, k +10] + inC[i, j, k +11] + inC[i, j, k +12] + inC[i, j, k +13] + inC[i, j, k +14] + inC[i, j, k +15] + inD[i, j, k +0] + inD[i, j, k +1] + inD[i, j, k +2] + inD[i, j, k +3] + inD[i, j, k +4] + inD[i, j, k +5] + inD[i, j, k +6] + inD[i, j, k +7] + inD[i, j, k +8] + inD[i, j, k +9] + inD[i, j, k +10] + inD[i, j, k +11] + inD[i, j, k +12] + inD[i, j, k +13] + inD[i, j, k +14] + inD[i, j, k +15] )"}, "k3": {"boundary_conditions": {"inA": {"type": "constant", "value": 1.0}, "inB": {"type": "constant", "value": 1.0}, "inC": {"type": "constant", "value": 1.0}, "inD": {"type": "constant", "value": 1.0}}, "data_type": "float64", "computation_string": "res = 0.0625 *  (inA[i, j, k +0] + inA[i, j, k +1] + inA[i, j, k +2] + inA[i, j, k +3] + inA[i, j, k +4] + inA[i, j, k +5] + inA[i, j, k +6] + inA[i, j, k +7] + inA[i, j, k +8] + inA[i, j, k +9] + inA[i, j, k +10] + inA[i, j, k +11] + inA[i, j, k +12] + inA[i, j, k +13] + inA[i, j, k +14] + inA[i, j, k +15] + inB[i, j, k +0] + inB[i, j, k +1] + inB[i, j, k +2] + inB[i, j, k +3] + inB[i, j, k +4] + inB[i, j, k +5] + inB[i, j, k +6] + inB[i, j, k +7] + inB[i, j, k +8] + inB[i, j, k +9] + inB[i, j, k +10] + inB[i, j, k +11] + inB[i, j, k +12] + inB[i, j, k +13] + inB[i, j, k +14] + inB[i, j, k +15] + inC[i, j, k +0] + inC[i, j, k +1] + inC[i, j, k +2] + inC[i, j, k +3] + inC[i, j, k +4] + inC[i, j, k +5] + inC[i, j, k +6] + inC[i, j, k +7] + inC[i, j, k +8] + inC[i, j, k +9] + inC[i, j, k +10] + inC[i, j, k +11] + inC[i, j, k +12] + inC[i, j, k +13] + inC[i, j, k +14] + inC[i, j, k +15] + inD[i, j, k +0] + inD[i, j, k +1] + inD[i, j, k +2] + inD[i, j, k +3] + inD[i, j, k +4] + inD[i, j, k +5] + inD[i, j, k +6] + inD[i, j, k +7] + inD[i, j, k +8] + inD[i, j, k +9] + inD[i, j, k +10] + inD[i, j, k +11] + inD[i, j, k +12] + inD[i, j, k +13] + inD[i, j, k +14] + inD[i, j, k +15] )"}, "out": {"data_type": "float64", "computation_string": "res = 0.0625 *  (k0[i, j, k +0] + k0[i, j, k +1] + k0[i, j, k +2] + k0[i, j, k +3] + k0[i, j, k +4] + k0[i, j, k +5] + k0[i, j, k +6] + k0[i, j, k +7] + k0[i, j, k +8] + k0[i, j, k +9] + k0[i, j, k +10] + k0[i, j, k +11] + k0[i, j, k +12] + k0[i, j, k +13] + k0[i, j, k +14] + k0[i, j, k +15] + k1[i, j, k +0] + k1[i, j, k +1] + k1[i, j, k +2] + k1[i, j, k +3] + k1[i, j, k +4] + k1[i, j, k +5] + k1[i, j, k +6] + k1[i, j, k +7] + k1[i, j, k +8] + k1[i, j, k +9] + k1[i, j, k +10] + k1[i, j, k +11] + k1[i, j, k +12] + k1[i, j, k +13] + k1[i, j, k +14] + k1[i, j, k +15] + k2[i, j, k +0] + k2[i, j, k +1] + k2[i, j, k +2] + k2[i, j, k +3] + k2[i, j, k +4] + k2[i, j, k +5] + k2[i, j, k +6] + k2[i, j, k +7] + k2[i, j, k +8] + k2[i, j, k +9] + k2[i, j, k +10] + k2[i, j, k +11] + k2[i, j, k +12] + k2[i, j, k +13] + k2[i, j, k +14] + k2[i, j, k +15] + k3[i, j, k +0] + k3[i, j, k +1] + k3[i, j, k +2] + k3[i, j, k +3] + k3[i, j, k +4] + k3[i, j, k +5] + k3[i, j, k +6] + k3[i, j, k +7] + k3[i, j, k +8] + k3[i, j, k +9] + k3[i, j, k +10] + k3[i, j, k +11] + k3[i, j, k +12] + k3[i, j, k +13] + k3[i, j, k +14] + k3[i, j, k +15] )", "boundary_conditions": {"k0": {"type": "constant", "value": 1.0}, "k1": {"type": "constant", "value": 1.0}, "k2": {"type": "constant", "value": 1.0}, "k3": {"type": "constant", "value": 1.0}}}}}