{
	"inputs": {
		"wtgfac": {
			"data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
			"data_type": "float64"
		}
	},
	"outputs": ["div"],
	"dimensions": [1, 3, 3],
	"program": {
		"vdc": {
			"computation_string": "res = 0.25 * (wtgfac[i,j,k+1] + wtgfac[i,j,k-1] + wtgfac[i,j+1,k] + wtgfac[i,j-1,k]) + vout[i,j,k]",
			"boundary_conditions": {
				"wtgfac": {
					"type": "constant",
					"value": 0.0
				},
				"vout": {
					"type": "constant",
					"value": 0.0
				}
			},
			"data_type": "float64"
		},
		"ppgk": {
			"computation_string": "res = 0.25 * (wtgfac[i,j,k+1] + wtgfac[i,j,k-1] + wtgfac[i,j+1,k] + wtgfac[i,j-1,k])",
			"boundary_conditions": {
				"wtgfac": {
					"type": "constant",
					"value": 0.0
				}
			},
			"data_type": "float64"
		},
		"ppgc": {
			"computation_string": "res = 0.25 * (ppgk[i,j,k+1] + ppgk[i,j,k-1] + ppgk[i,j+1,k] + ppgk[i,j-1,k])",
			"boundary_conditions": {
				"ppgk": {
					"type": "constant",
					"value": 0.0
				}
			},
			"data_type": "float64"
		},
		"ppgv": {
			"computation_string": "res = 0.25 * (ppgc[i,j,k+1] + ppgc[i,j,k-1] + ppgc[i,j+1,k] + ppgc[i,j-1,k])",
			"boundary_conditions": {
				"ppgc": {
					"type": "constant",
					"value": 0.0
				}
			},
			"data_type": "float64"
		},
		"vout": {
			"computation_string": "res = 0.25 * (ppgv[i,j,k+1] + ppgv[i,j,k-1] + ppgv[i,j+1,k] + ppgv[i,j-1,k])",
			"boundary_conditions": {
				"ppgv": {
					"type": "constant",
					"value": 0.0
				}
			},
			"data_type": "float64"
		},
		"div": {
			"computation_string": "OUT = vdc[i,j,k] + vout[i,j,k]; res = OUT if ppgk[i,j,k] < wtgfac[i,j,k] else wtgfac[i,j,k];",
			"boundary_conditions": {
				"vdc": {
					"type": "constant",
					"value": 0.0
				},
				"vout": {
					"type": "constant",
					"value": 0.0
				},
				"ppgk": {
					"type": "constant",
					"value": 0.0
				},
				"wtgfac": {
					"type": "constant",
					"value": 0.0
				}
			},
			"data_type": "float64"
		}
	}
}
